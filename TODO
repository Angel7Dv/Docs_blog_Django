DONE configuracion de aplicaciones
DONE configuraciond de settings

DONE front page

DONE lista de temas

DONE temas
DONE articulos
DONE sub articulos

DONE mostrar temas de cada categoria
DONE add edit and delete tema
DONE add edit and delete category
DONE add edit and delete tema

DONE delete into edit
DONE texto enriquecido 


imagenes en el texto
tumbnail





/categorias | tema | subclase - articulos
backend

python
django


frontend

#html
maquetado

#css
bootstrap


#javascripts
vue
react


links de utilidad


TinyMCE

pip install django-tinymce4-lite

sttings.py

    INSTALLS_APPS[
        'tinymce'
    ]



TINYMCE_DEFAULT_CONFIG = {
    'height': 360,
    'width': 1120,
    'cleanup_on_startup': True,
    'custom_undo_redo_levels': 20,
    'selector': 'textarea',
    'theme': 'modern',
    'plugins': '''
            textcolor save link image media preview codesample contextmenu
            table code lists fullscreen  insertdatetime  nonbreaking
            contextmenu directionality searchreplace wordcount visualblocks
            visualchars code fullscreen autolink lists  charmap print  hr
            anchor pagebreak
            ''',
    'toolbar1': '''
            fullscreen preview bold italic underline | fontselect,
            fontsizeselect  | forecolor backcolor | alignleft alignright |
            aligncenter alignjustify | indent outdent | bullist numlist table |
            | link image media | codesample |
            ''',
    'toolbar2': '''
            visualblocks visualchars |
            charmap hr pagebreak nonbreaking anchor |  code |
            ''',
    'contextmenu': 'formats | link image',
    'menubar': True,
    'statusbar': True,
    }


urls.py

path('tinymece/', include("tinymece.urls"))


admin.py


from tinymce.widgets import TinyMCE
from django.db import models

class ProyectoAdmin(admin.ModelAdmin):
    formfield_overrides = {
        models.TextField: {'widget': TinyMCE}
    }

admin.site.register(Proyecto, ProyectoAdmin)